{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"keyvaultName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Azure Key Vault"
			}
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Username for the Virtual Machine."
			}
		},
		"authenticationType": {
			"type": "string",
			"defaultValue": "password",
			"allowedValues": ["password",
			"sshPublicKey"],
			"metadata": {
				"description": "Authentication type"
			}
		},
		"adminPasswordorSSHKey": {
			"type": "securestring",
			"metadata": {
				"description": "OS Admin password or SSH Key depending on value of authentication type"
			}
		},
		"dnsLabelPrefix": {
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
			},
			"defaultValue": "[concat('msi',uniquestring(resourceGroup().id,deployment().name))]"
		},
		"location": {
			"type": "string",
			"metadata": {
				"description": "The Location For the resources"
			},
			"defaultValue": "[resourceGroup().location]"
		},
		"vmSize": {
			"type": "string",
			"metadata": {
				"description": "The size of the VM to create"
			},
			"defaultValue": "Standard_DS1_V2"
		}
	},
	"variables": {
		"storageAccountName": "[take(concat(uniquestring(resourceGroup().id), parameters('dnsLabelPrefix')),24)]",
		"nicName": "[concat('nic',uniquestring(resourceGroup().id,deployment().name))]",
		"networkSecurityGroupName": "[concat('nsg',uniquestring(resourceGroup().id,deployment().name))]",
		"addressPrefix": "10.0.0.0/16",
		"subnetName": "Subnet",
		"subnetPrefix": "10.0.0.0/24",
		"publicIPAddressName": "[concat('pip',uniquestring(resourceGroup().id,deployment().name))]",
		"vmName": "[concat('vm',uniquestring(resourceGroup().id,deployment().name))]",
		"virtualNetworkName": "[concat('vnet',uniquestring(resourceGroup().id,deployment().name))]",
		"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
		"computeAPIVersion": "2017-03-30",
		"storageAPIVersion": "2016-12-01",
		"networkAPIVersion": "2016-09-01",
		"managedIdentityAPIVersion": "2015-08-31-PREVIEW",
		"publisher": "Canonical",
		"offer": "UbuntuServer",
		"sku": "16.04-LTS",
		"linuxConfigurationChosen": "[concat('linuxConfiguration', parameters('authenticationType'))]",
		"linuxConfigurationsshPublicKey": {
			"disablePasswordAuthentication": true,
			"ssh": {
				"publicKeys": [{
					"path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
					"keyData": "[parameters('adminPasswordorSSHKey')]"
				}]
			}
		},
		"linuxConfigurationpassword": {
			"disablePasswordAuthentication": false
		},
		"adminPasswordChosen": "[concat('adminPassword', parameters('authenticationType'))]",
		"adminPasswordsshPublicKey": "",
		"adminPasswordpassword": "[parameters('adminPasswordorSSHKey')]",
        "createVMSSUrl": "[concat(parameters('_artifactsLocation'), '/createVMSS.json', parameters('_artifactsLocationSasToken'))]",
		"createRBACUrl": "[concat(parameters('_artifactsLocation'), '/setUpRBAC.json', parameters('_artifactsLocationSasToken'))]"
	},
	"resources": [{
		"type": "Microsoft.Storage/storageAccounts",
		"name": "[variables('storageAccountName')]",
		"apiVersion": "[variables('storageAPIVersion')]",
		"location": "[parameters('Location')]",
		"sku": {
			"name": "Standard_LRS"
		},
		"kind": "Storage",
		"properties": {
			
		}
	},
	{
		"apiVersion": "[variables('networkAPIVersion')]",
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[variables('publicIPAddressName')]",
		"location": "[parameters('Location')]",
		"properties": {
			"publicIPAllocationMethod": "Dynamic",
			"dnsSettings": {
				"domainNameLabel": "[parameters('dnsLabelPrefix')]"
			}
		}
	},
	{
		"apiVersion": "[variables('networkAPIVersion')]",
		"type": "Microsoft.Network/virtualNetworks",
		"name": "[variables('virtualNetworkName')]",
		"location": "[parameters('Location')]",
		"properties": {
			"addressSpace": {
				"addressPrefixes": ["[variables('addressPrefix')]"]
			},
			"subnets": [{
				"name": "[variables('subnetName')]",
				"properties": {
					"addressPrefix": "[variables('subnetPrefix')]"
				}
			}]
		}
	},
	{
		"name": "[variables('networkSecurityGroupName')]",
		"type": "Microsoft.Network/networkSecurityGroups",
		"apiVersion": "[variables('networkAPIVersion')]",
		"location": "[parameters('location')]",
		"properties": {
			"securityRules": [{
				"name": "default-allow-ssh",
				"properties": {
					"priority": 1000,
					"sourceAddressPrefix": "*",
					"protocol": "TCP",
					"destinationPortRange": "22",
					"access": "Allow",
					"direction": "Inbound",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('networkAPIVersion')]",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[variables('nicName')]",
		"location": "[parameters('Location')]",
		"dependsOn": ["[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
		"[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"],
		"properties": {
			"ipConfigurations": [{
				"name": "ipconfig1",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"publicIPAddress": {
						"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
					},
					"subnet": {
						"id": "[variables('subnetRef')]"
					}
				}
			}],
			"networkSecurityGroup": {
				"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
			}
		}
	},
	{
		"apiVersion": "[variables('computeAPIVersion')]",
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[variables('vmName')]",
		"location": "[parameters('Location')]",
		"identity": {
			"type": "systemAssigned"
		},
		"dependsOn": ["[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
		"[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"],
		"properties": {
			"hardwareProfile": {
				"vmSize": "[parameters('vmSize')]"
			},
			"osProfile": {
				"computerName": "[variables('vmName')]",
				"adminUsername": "[parameters('adminUsername')]",
				"adminPassword": "[variables(variables('adminPasswordChosen'))]",
				"linuxConfiguration": "[variables(variables('linuxConfigurationChosen'))]"
			},
			"storageProfile": {
				"imageReference": {
					"publisher": "[variables('publisher')]",
					"offer": "[variables('offer')]",
					"sku": "[variables('sku')]",
					"version": "latest"
				}
			},
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
				}]
			},
			"diagnosticsProfile": {
				"bootDiagnostics": {
					"enabled": "true",
					"storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
				}
			}
		}
	},
	{
		"type": "Microsoft.Compute/virtualMachines/extensions",
		"name": "[concat(variables('vmName'),'/MSILinuxExtension')]",
		"apiVersion": "[variables('computeAPIVersion')]",
		"location": "[parameters('Location')]",
		"dependsOn": ["[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"],
		"properties": {
			"publisher": "Microsoft.ManagedIdentity",
			"type": "ManagedIdentityExtensionForLinux",
			"typeHandlerVersion": "1.0",
			"autoUpgradeMinorVersion": true,
			"settings": {
				"port": 50342
			},
			"protectedSettings": {
				
			}
		}
	}],
	{
		"name": "creatingRBAC",
		"type": "Microsoft.Resources/deployments",
		"apiVersion": "[variables('deploymentApiVersion')]",
		"dependsOn": ["Microsoft.Resources/deployments/creatingVMSS"],
		"properties": {
			"mode": "Incremental",
			"templateLink": {
				"uri": "[variables('createRBACUrl')]",
				"contentVersion": "1.0.0.0"
			},
			"parameters": {
				"principalId": {
					"value": "[reference('Microsoft.Resources/deployments/creatingVMSS', variables('deploymentApiVersion')).outputs.principalId.value]"
				},
				"keyvaultName": {
					"value": "[parameters('keyvaultName')]"
				}
			}
		}
	},
	"outputs": {
		"hostname": {
			"type": "string",
			"value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
		},
		"principalId": {
			"type": "string",
			"value": "[reference(concat(resourceId('Microsoft.Compute/virtualMachines/', variables('vmName')),'/providers/Microsoft.ManagedIdentity/Identities/default'),variables('managedIdentityAPIVersion')).principalId]"
		}
	}
}
